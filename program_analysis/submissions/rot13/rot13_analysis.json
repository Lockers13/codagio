{"count_hash": {"fdefs": 1, "whiles": 0, "ifs": 3, "fors": 1, "assigns": 7, "augassigns": 3, "fcalls": 0, "calls": 0, "ops": 12, "elses": 3, "trys": 0, "exc_handlers": 0, "returns": 1, "else-ifs": 1, "level": -1, "nest_level": -1}, "line_indents": {"line_4": 0, "line_5": 1, "line_6": 1, "line_7": 1, "line_8": 1, "line_9": 1, "line_10": 2, "line_11": 2, "line_12": 3, "line_13": 4, "line_14": 3, "line_15": 4, "line_16": 2, "line_17": 3, "line_18": 4, "line_19": 3, "line_20": 4, "line_21": 2, "line_22": 3, "line_23": 2, "line_24": 1}, "nested_fdefs": [], "nested_loops": [], "fdefs": {"fdef_1": {"name": "rot13", "retval": null, "lineno": 4, "level": 0, "args": ["phrase"], "skeleton": ["def rot13(phrase):", "    assign tuple", "    assign tuple", "    assign num", "    assign str", "    for loop:", "        assign call", "        if boolop:", "            if compare:", "                assign binop", "            else:", "                augassign num", "        elif boolop:", "            if compare:", "                assign binop", "            else:", "                augassign num", "        else:", "            pass ", "        augassign call", "    return name"], "num_whiles": 0, "num_fors": 1, "num_ifs": 3, "num_ops": 12, "num_calls": 0, "num_elses": 3, "num_assigns": 7, "num_augassigns": 3, "num_trys": 0, "num_returns": 1, "num_else-ifs": 1, "ncalls": "1000", "tot_time": "0.011", "cum_time": "0.013", "line_profile": {"line_4": {"hits": "0", "%time": "0.0", "contents": "def rot13(phrase):"}, "line_5": {"hits": "1000", "%time": "1.3", "contents": "ascii_lower = (97, 122)"}, "line_6": {"hits": "1000", "%time": "1.0", "contents": "ascii_upper = (65, 90)"}, "line_7": {"hits": "1000", "%time": "1.0", "contents": "LEN_ALPHA = 26"}, "line_8": {"hits": "1000", "%time": "1.0", "contents": "new_string = \"\""}, "line_9": {"hits": "11377", "%time": "12.8", "contents": "for char in phrase:"}, "line_10": {"hits": "10377", "%time": "12.9", "contents": "ascii_num = ord(char)"}, "line_11": {"hits": "10377", "%time": "15.0", "contents": "if ascii_num >= ascii_lower[0] and ascii_num <= ascii_lower[1]:"}, "line_12": {"hits": "5183", "%time": "7.7", "contents": "if ((ascii_num - ascii_lower[0]) + 13) >= LEN_ALPHA:"}, "line_13": {"hits": "2551", "%time": "4.1", "contents": "ascii_num = ascii_lower[0] + (((ascii_num - ascii_lower[0]) + 13) - LEN_ALPHA)"}, "line_14": {"hits": "0", "%time": "0.0", "contents": "else:"}, "line_15": {"hits": "2632", "%time": "3.1", "contents": "ascii_num += 13"}, "line_16": {"hits": "5194", "%time": "7.5", "contents": "elif ascii_num >= ascii_upper[0] and ascii_num <= ascii_upper[1]:"}, "line_17": {"hits": "5194", "%time": "7.5", "contents": "if ((ascii_num - ascii_upper[0]) + 13) >= LEN_ALPHA:"}, "line_18": {"hits": "2586", "%time": "4.1", "contents": "ascii_num = ascii_upper[0] + (((ascii_num - ascii_upper[0]) + 13) - LEN_ALPHA)"}, "line_19": {"hits": "0", "%time": "0.0", "contents": "else:"}, "line_20": {"hits": "2608", "%time": "3.1", "contents": "ascii_num += 13"}, "line_21": {"hits": "0", "%time": "0.0", "contents": "else:"}, "line_22": {"hits": "0", "%time": "0.0", "contents": "pass"}, "line_23": {"hits": "10377", "%time": "16.9", "contents": "new_string += chr(ascii_num)"}, "line_24": {"hits": "1000", "%time": "1.0", "contents": "return new_string"}}}}, "scores": {"test_1": {"status": "success", "input_length": 1000, "input_type": "str"}, "test_2": {"status": "success", "input_length": 1000, "input_type": "str"}, "test_3": {"status": "success", "input_length": 1000, "input_type": "str"}, "overall_score": "100.0%"}, "fcomp_overview_stats": [[["name : rot13", "name : rot13"], ["retval : None", "retval : None"], ["lineno : 4", "lineno : 7"], ["level : 0", "level : 0"], ["args : ['phrase']", "args : ['phrase']"], ["num_whiles : 0", "num_whiles : 0"], ["num_fors : 1", "num_fors : 1"], ["num_ifs : 3", "num_ifs : 1"], ["num_ops : 12", "num_ops : 4"], ["num_calls : 0", "num_calls : 0"], ["num_elses : 3", "num_elses : 1"], ["num_assigns : 7", "num_assigns : 1"], ["num_augassigns : 3", "num_augassigns : 2"], ["num_trys : 0", "num_trys : 0"], ["num_returns : 1", "num_returns : 1"], ["num_else-ifs : 1", "num_else-ifs : 0"], ["ncalls : 1000", "ncalls : 1000"], ["tot_time : 0.011", "tot_time : 0.007"], ["cum_time : 0.013", "cum_time : 0.011"]]]}